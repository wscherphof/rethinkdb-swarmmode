#!/bin/bash

usage ()
{
	echo "Usage:"
	echo "  nodes env [-d driver] [type; manager or worker]"
	echo "  nodes env rm"
	echo "e.g. nodes dev"
	echo "  creates dev-manager-1, dev-worker-1, and dev-worker-2 on virtualbox"
	echo "e.g. nodes dev worker"
	echo "  creates an extra worker (dev-worker-3) on virtualbox"
	echo "e.g. nodes tst -d digitalocean"
	echo "  creates tst-manager-1, tst-worker-1, and tst-worker-2 on digitalocean"
	echo "  use environment values to specify mandatory and optional settings"
	echo "e.g. nodes tst -d google worker"
	echo "  creates an extra worker (tst-worker-3) on google compute engine"
	echo "  use environment values to specify mandatory and optional settings"
	echo "e.g. nodes dev rm"
	echo "  removes all dev nodes"
	exit 1
}

if [ ! "$1" -o "$1" = "help" -o "$1" = "-h" -o "$1" = "--help" ]; then
	usage
else
	ENV="$1"
fi
if [ "$2" = "rm" ]; then
	RM="rm"
elif [ "$2" = "-d" ]; then
	DRIVER="$3"
	TYPE="$4"
	FIREWALL="y"
elif [ "$2" = "manager" -o "$2" = "worker" ]; then
	TYPE="$2"
	DRIVER="virtualbox --virtualbox-memory 1024 --virtualbox-cpu-count 2 --virtualbox-disk-size 10000"
else
	usage
fi

create ()
{
	type="$1"
	number="$2"
	node="${ENV}-${type}-${number}"
	docker-machine create --driver $DRIVER $node
	if [ "$?" != "0" ]; then
		echo "* $node create failed"
		return 1
	fi
	MANAGER_IP="$(docker-machine ip ${ENV}-manager-1)"
	if [ "$type" = "manager" ]; then
		if [ "$number" = "1" ]; then
			docker-machine ssh ${ENV}-manager-1 docker swarm init --advertise-addr $MANAGER_IP
		else	
			TOKEN="$(docker-machine ssh ${ENV}-manager-1 docker swarm join-token --quiet manager)"
			docker-machine ssh ${ENV}-manager-$number docker swarm join --token $TOKEN $MANAGER_IP:2377
		fi
	else
		TOKEN="$(docker-machine ssh ${ENV}-manager-1 docker swarm join-token --quiet worker)"
		docker-machine ssh ${ENV}-worker-$number docker swarm join --token $TOKEN $MANAGER_IP:2377
	fi
	if [ "$FIREWALL" ]; then
		docker-machine ssh $node sudo ufw default deny incoming
		docker-machine ssh $node sudo ufw default allow outgoing
		docker-machine ssh $node sudo ufw allow ssh
		docker-machine ssh $node sudo ufw allow http
		docker-machine ssh $node sudo ufw allow https
		docker-machine ssh $node sudo ufw allow 2376 # docker api
		docker-machine ssh $node sudo ufw allow 2377 # docker swarm mode
		docker-machine ssh $node sudo ufw allow 7946 # docker overlay
		docker-machine ssh $node sudo ufw allow 4789 # ??
		docker-machine ssh $node sudo ufw --force enable
	fi
	docker-machine restart $node
	if [ "$?" != "0" ]; then
		echo "* $node restart failed"
		return 1
	else
		echo "* $node ready"
	fi
}

remove ()
{
	read -p "Type Y to remove ALL ${ENV} nodes... " answer
	if [ "$answer" != "Y" ]; then
		exit
	fi
	for type in worker manager
	do
		for (( i=1; ; i++ ))
		do
			docker-machine status ${ENV}-${type}-${i} &>/dev/null
			if [ "$?" = "0" ]; then
				docker-machine rm -f ${ENV}-${type}-${i}
			else
				break
			fi
		done
	done
}

if [ "$RM" ]; then
	remove
elif [ "$TYPE" ]; then
	for (( i=1; ; i++ ))
	do
		docker-machine ip ${ENV}-${TYPE}-${i} &>/dev/null
		if [ "$?" != "0" ]; then
			NUMBER="$i"
			break
		fi
	done
	create $TYPE $NUMBER
else
	remove
	create manager 1
	create worker 1 &
	create worker 2
fi
